package com.mycompany.bus_management.domain;
// Generated Jul 25, 2018 2:36:02 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Route generated by hbm2java
 */
@Entity
@Table(name="route"
    ,catalog="bus_management"
)
public class Route  implements java.io.Serializable {


     private Integer routeId;
     private BusInfo busInfo;
     private Employee employee;
     private String routeNo;
     private String routeName;
     private String depot;
     private String destination;
     private String distance;
     private Double acCharge;
     private Double nonAcCharge;
     private Set<RouteCounter> routeCounters = new HashSet<RouteCounter>(0);
     private Set<BusSchedule> busSchedules = new HashSet<BusSchedule>(0);
     private Set<SaleAccount> saleAccounts = new HashSet<SaleAccount>(0);

    public Route() {
    }

    public Route(BusInfo busInfo, Employee employee, String routeNo, String routeName, String depot, String destination, String distance, Double acCharge, Double nonAcCharge, Set<RouteCounter> routeCounters, Set<BusSchedule> busSchedules, Set<SaleAccount> saleAccounts) {
       this.busInfo = busInfo;
       this.employee = employee;
       this.routeNo = routeNo;
       this.routeName = routeName;
       this.depot = depot;
       this.destination = destination;
       this.distance = distance;
       this.acCharge = acCharge;
       this.nonAcCharge = nonAcCharge;
       this.routeCounters = routeCounters;
       this.busSchedules = busSchedules;
       this.saleAccounts = saleAccounts;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="route_id", unique=true, nullable=false)
    public Integer getRouteId() {
        return this.routeId;
    }
    
    public void setRouteId(Integer routeId) {
        this.routeId = routeId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="bus_id")
    public BusInfo getBusInfo() {
        return this.busInfo;
    }
    
    public void setBusInfo(BusInfo busInfo) {
        this.busInfo = busInfo;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="emp_id")
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    
    @Column(name="route_no", length=45)
    public String getRouteNo() {
        return this.routeNo;
    }
    
    public void setRouteNo(String routeNo) {
        this.routeNo = routeNo;
    }

    
    @Column(name="route_name", length=45)
    public String getRouteName() {
        return this.routeName;
    }
    
    public void setRouteName(String routeName) {
        this.routeName = routeName;
    }

    
    @Column(name="depot", length=45)
    public String getDepot() {
        return this.depot;
    }
    
    public void setDepot(String depot) {
        this.depot = depot;
    }

    
    @Column(name="destination", length=45)
    public String getDestination() {
        return this.destination;
    }
    
    public void setDestination(String destination) {
        this.destination = destination;
    }

    
    @Column(name="distance", length=45)
    public String getDistance() {
        return this.distance;
    }
    
    public void setDistance(String distance) {
        this.distance = distance;
    }

    
    @Column(name="ac_charge", precision=22, scale=0)
    public Double getAcCharge() {
        return this.acCharge;
    }
    
    public void setAcCharge(Double acCharge) {
        this.acCharge = acCharge;
    }

    
    @Column(name="non_ac_charge", precision=22, scale=0)
    public Double getNonAcCharge() {
        return this.nonAcCharge;
    }
    
    public void setNonAcCharge(Double nonAcCharge) {
        this.nonAcCharge = nonAcCharge;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="route")
    public Set<RouteCounter> getRouteCounters() {
        return this.routeCounters;
    }
    
    public void setRouteCounters(Set<RouteCounter> routeCounters) {
        this.routeCounters = routeCounters;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="route")
    public Set<BusSchedule> getBusSchedules() {
        return this.busSchedules;
    }
    
    public void setBusSchedules(Set<BusSchedule> busSchedules) {
        this.busSchedules = busSchedules;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="route")
    public Set<SaleAccount> getSaleAccounts() {
        return this.saleAccounts;
    }
    
    public void setSaleAccounts(Set<SaleAccount> saleAccounts) {
        this.saleAccounts = saleAccounts;
    }




}


